# Copyright (c) <year> <author> (<email>)
# Distributed under the MIT License.
# See accompanying file LICENSE.md or copy at http://opensource.org/licenses/MIT

language: cpp

sudo: false

compiler:
  - gcc
  - clang

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "tBm2WJoyW2oW+GJqNvVHoWJ/dJLSxP0786S/MP6YdChbhhzLpIxh+qoaH0KDU0d/PUYnM2gerJO9nlx3VIRunBOv+RYH288D8xAAb43fbrFPWtlsoE0N/bTEGpKS/iGfeBwGdYCh/6bcqB/tTwy00iPRTMTnX1wIvQ+yEon9SidakPxT1i/WveuiVmOewUTYuv/udfq/pvDOQ4/PXlNk/qR+Q2F0Hi+Sh5ZVbNWPHp8bsbwU+/+qAJZ5H5qBM3fmInKREoFXKc1QFYKMZ57NrZUFxolFsq30VKaO0nKVJxxwtq6orlEfjFhstxOWhBcdk5rngVG/7pNrgax3M/vpEM6GW9DLFgSPhRGw7unVyfkdnA4tyg0z1q3EHb3Gn64nrCzSNokkw4ieP+rxC7fGBKpb40VAtuNtzXr/gc9nCBXmmk6PwBYzV+DI6t0QzIBtMSoWSVQH/UEANAYc05rdPDjE3L617vVuA2xLmR6tI+WpvhqAYEgjeyl4UGiMkP2HvGkUL9OSLq2rIqUZZAUcapKhfSxDsPLXKm1R+HlWpll0kyQshog1pCIQ8Nr4A2R0+i6jrqDBnYRb3XEc7LksR9csuUi9fo7JlSg+0A1N28jVKPLwqfOwQqF/RY5YUSBwmPE28hx7xL9wMXCpCDnvxQ1ACoJwleOGPos7WcZS9vs="
  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - compiler: clang
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan
    - compiler: gcc
      env: COVERITY_SCAN_BRANCH_PATTERN=coverity_scan BUILD_TYPE=Release

addons:
  coverity_scan:
    project:
      name: "kartikkumar/cppbase"
      description: "Build submitted via Travis CI"
    notification_email: me@kartikkumar.com
    build_command_prepend: "mkdir build; cd build; cmake -DPROJECT_NAME=cppbase -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on .."
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - bash scripts/install_cmake.sh
  - bash scripts/install_doxygen.sh
  - chmod ugo+x scripts/check_doxygen.sh
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-;
      pip install --user cpp-coveralls;
    fi

script:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ]; then
      mkdir build;
      cd build;
      $HOME/cmake/bin/cmake -DPROJECT_NAME=cppbase -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTS=on -DDOXYGEN_EXECUTABLE=$HOME/doxygen/bin/doxygen -DBUILD_DOXYGEN_DOCS=on ..;
      make;
      ctest -V;
      ../scripts/check_doxygen.sh;
    fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH_PATTERN" != "coverity_scan" ] && [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then
      coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*test/.*.cpp.*" -E ".*src/main.cpp.*";
    fi
